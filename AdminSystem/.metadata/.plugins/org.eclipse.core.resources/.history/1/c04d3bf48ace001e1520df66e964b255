package com.adminSystem.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.adminSystem.entity.OTSEntity;
import com.adminSystem.repository.OTSRepository;

@Service
public class OTSService {
	@Autowired
	private OTSRepository otsRepository;

	public List<OTSEntity> getAllEntries() {
		return otsRepository.findAll();
	}

	public OTSEntity addOTSRecord(OTSEntity otsEntity) {
		// You may perform additional validation or processing here before saving
		return otsRepository.save(otsEntity);
	}


	@PostMapping("ots/update/{id}")
	public ResponseEntity<OTSEntity> updateOTSRecord(@PathVariable Long id, MultiValueMap<String, String> formData) {
	    // Convert form data to OTSEntity object
	    OTSEntity updatedEntity = new OTSEntity();
	    updatedEntity.setAccounts(formData.getFirst("accounts"));
	    updatedEntity.setCustomerName(formData.getFirst("customerName"));
	    // Map other fields similarly

	    // Call the updateOTSRecord method with the entity
	    OTSEntity updatedRecord = otsService.updateOTSRecord(id, updatedEntity);
	    return new ResponseEntity<>(updatedRecord, HttpStatus.OK);
	}


	public void deleteOTSRecord(Long id) {
		// Check if the record exists
		if (otsRepository.existsById(id)) {
			// Delete the record
			otsRepository.deleteById(id);
		} else {
			// Handle the case where the record with the given id is not found
			throw new RuntimeException("Record not found with id: " + id);
		}
	}

	
}
